{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HOME_PAGE_URL } from \"../shared/constants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(afa, us, router) {\n      this.afa = afa;\n      this.us = us;\n      this.router = router;\n\n      this.signUpWithEmailAndPassword = user => __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n          yield this.afa.createUserWithEmailAndPassword(user.email, user.password).then(value => {\n            if (value) {\n              this.currentAuthUser.next(value);\n              resolve(value);\n              this.us.createNewUser(user, value.user.uid, HOME_PAGE_URL);\n            }\n          }).catch(error => {\n            this.currentAuthUser.next(undefined);\n            reject(error);\n          });\n        }));\n      });\n\n      this.loginWithEmailAndPassword = (email, password) => __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n          yield this.afa.signInWithEmailAndPassword(email, password).then(user => {\n            if (user) {\n              this.currentAuthUser.next(user);\n              resolve(user);\n              this.router.navigate(HOME_PAGE_URL);\n            }\n          }).catch(error => {\n            this.currentAuthUser.next(undefined);\n            reject(error);\n          });\n        }));\n      });\n\n      this.logOut = () => __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n          yield this.afa.signOut().then(() => {\n            resolve(true);\n          }).catch(error => {\n            reject(error);\n          });\n        }));\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}